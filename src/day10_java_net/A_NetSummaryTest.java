package day10_java_net;

import org.junit.Test;

/**
 * Java 是 Internet 上的语言，它从语言级上提供了对网络应用程序的支持，程序员能够很容易开发常见的网络应用程序。
 *
 * 1、网络基础知识
 *      - 软件架构：
 *          -- C/S架构：全称为 Client/Server 结构，是指客户端和服务器结构。常见程序有 QQ、美团、 360安全卫士等软件。
 *          -- B/S架构：全称为 Browser/Server 结构，是指浏览器和服务器结构。常见浏览器有 IE、谷歌、火狐等。
 *          -- 两种架构各有优势，但是无论哪种架构，都离不开网络的支持。 网络编程，就是在一定的协议下，实现两台计算机的通信的程序。
 *
 *      - 网络基础：
 *          -- 计算机网络：把分布在不同地理区域的计算机与专门的外部设备用通信线路互连成一个规模大、功能强的网络系统，从而使众多的计算机可以方便地互相传递信息、
 *              共享硬件、软件、数据信息等资源。
 *          -- 网络编程的目的：直接或间接地通过网络协议与其它计算机实现数据交换，进行通讯。
 *          -- 网络编程中的三个主要问题：
 *              > 1、如何准确定位网络上的一台或多台主机
 *              > 2、找到主机后，如何定位要进行通信的特定应用程序。
 *              > 3、找到程序后，如何可靠的、高效的进行数据传输通信。
 *
 * 2、网络通信要素
 *      - IP地址和域名（定位主机）
 *          -- IP地址：指互联网协议地址（Internet Protocol Address），俗称IP。 IP 地址用来给网络中的一台计算机设备做唯一的编号。
 *              > 查看本机IP地址：控制台输入 ipconfig
 *              > 检查网络联通性：控制台输入 ping www.baidu.com
 *              > 本地回环地址(hostAddress)： 127.0.0.1
 *              > 主机名(hostName)： localhost
 *          -- 域名：因为 IP 地址数字不便于记忆，因此出现了域名。域名容易记忆，当在连接网络时输入一个主机的域名后，域名服务器(DNS， Domain Name System)
 *              负责将域名转化成 IP 地址（域名解析），这样才能和主机建立连接。浏览器访问www.baidu.com时，域名解析过程如下：
 *              > 1、首先检查本地缓存hosts文件（C:\Windows\System32\drivers\etc\hosts）中是否有该IP地址映射，有则完成域名解析。否则下一步
 *              > 2、检查本机的DNS解析器（缓存有以往通过本地DNS服务器查询到的IP地址映射）是否有该映射，有则完成域名。否则，下一步
 *              > 3、查询TCP/IP参数中设置的首选DNS服务器，也被称为本地DNS服务器。本地DNS服务器收到查询，有则返回，完成域名解析。否则，下一步
 *              > 4、本地DNS服务器直接请求根域名服务器（未转发模式），或，本地DNS服务器请求上级域名服务器（转发模式）完成解析后返回本机。否则，访问失败。
 *
 *      - 端口号（定位应用程序）
 *          -- 网络的通信，本质上是两个进程（应用程序）的通信。IP 地址可以唯一标识网络中的设备，那么端口号就可以唯一标识设备中的进程（应用程序）。
 *          -- 端口号：用两个字节表示的整数，它的取值范围是 0~65535。
 *              > 公认端口： 0~1023。被预先定义的服务通信占用，如：HTTP（80），FTP（21），Telnet（23）
 *              > 注册端口： 1024~49151。分配给用户进程或应用程序。如：Tomcat（8080）， MySQL（3306）， Oracle（1521）。
 *              > 动态/ 私有端口： 49152~65535。
 *          -- 如果端口号被另外一个服务或应用所占用，会导致当前程序启动失败。
 *
 *      - 网络协议（保证可靠的、高效的数据传输）
 *          - 计算机网络中，连接和通信多台计算机之间的规则被称为网络通信协议，它对数据的传输格式、传输速率、传输步骤、出错控制等做了统一规定，
 *              通信双方必须同时遵守才能完成数据交换。
 *
 * 3、网络通信协议
 *      - 问题：计算机网络通信涉及内容太多、太复杂，比如指定源地址和目标地址，加密解密，压缩解压缩，差错控制，流量控制，路由控制，如何实现？
 *          答：网络通信协议采用分层思想：同层间可以通信、上一层可以调用下一层，而与再下一层不发生关系。各层互不影响，利于系统的开发和扩展。
 *
 *      - TCP/IP协议：传输控制协议/因特网互联协议(Transmission Control Protocol/Internet Protocol)，一组协议，包括多个具有不同功能且互为关联的协议。
 *          是互联网最基本、最广泛的协议。它包含以下四层：
 *          -- 应用层：应用层决定了向用户提供应用服务时通信的活动。主要协议有：HTTP协议、FTP 协议、SNMP（简单网络管理协议） SMTP（简单邮件传输协议）
 *              和 POP3（Post Office Protocol 3 的简称,即邮局协议的第3个版本）等。
 *          -- 传输层：主要让网络程序进行通信，在进行网络通信时，可以采用TCP协议，也可以采用UDP协议。TCP（Transmission Control Protocol）协议，
 *              即传输控制协议，是一种面向连接的、可靠的、基于字节流的传输层通信协议。 UDP(User DatagramProtocol，用户数据报协议)：是一个无连接的
 *              传输层协议、提供面向事务的简单不可靠的信息传送服务。
 *          -- 网络层：网络层是整个 TCP/IP 协议的核心，支持网间互连的数据通信。它主要用于将传输的数据进行分组，将分组数据发送到目标计算机或者网络。
 *              而 IP 协议是一种非常重要的协议。IP（internet protocal）又称为互联网协议。 IP 的责任就是把数据从源传送到目的地。它在源地址和目的地址
 *              之间传送一种称之为分组的东西，它还提供对数据大小的重新组装功能，以适应不同网络对分组大小的要求。
 *          -- 网络接口层：包括物理层和数据链路层，链路层是用于定义物理传输通道，通常是对某些网络连接设备的驱动协议，例如针对光纤、网线提供的驱动。
 *
 *
 * @ClassName: A_NetSummaryTest.java
 * @Author: anpeng
 * @Date: 2024/3/23 16:57
 */
@SuppressWarnings("all")
public class A_NetSummaryTest {
    @Test
    public void testNetSummary(){
        System.out.println("this is net summary");
    }
    
}
